#!/usr/bin/env bash

VERSION="0.0";

if [[ -z "$DISPLAY" ]]; then
    DISPLAY=":1";
    export DISPLAY;
fi

title="";
prompt="";
description="";
keyinfo="";

prompt_action="";

ask_password() {
  dmenu -P -p "$prompt" 2> /dev/null;
}

save_option() {
  echo "OK";
}

get_info() {
  case "$1" in
    version) echo "D $VERSION" && echo "OK" ;;
    pid) echo "D $BASHPID" && echo "OK" ;;
    *) echo "ERR 280 IPC parameter error <Unspecified source>" ;;
  esac;
}

password_prompt() {
  if pass=$(ask_password); then
    [[ ! -z "$pass" ]] && echo "D $pass";
    echo "OK";
  else
    echo "ERR 99 Operation cancelled <Unspecified source>";
  fi;
}

interpret_command() {
  cmd="$(echo "$1" | cut -d' ' -f1)";
  data="$(echo "$1" | cut -d' ' -f2-)";

  case "$cmd" in
    INIT) echo "OK Pleased to meet you" ;;
    OPTION) save_option "$data" ;;
    GETINFO) get_info "$data" ;;
    SETTITLE) title="$data" && echo "OK" ;;
    SETPROMPT) prompt="$data" && echo "OK" ;;
    SETDESC) description="$data" && echo "OK" ;;
    SETKEYINFO) keyinfo="$data" && echo "OK" ;;
    GETPIN) password_prompt ;;
    BYE) echo "OK closing connection" && exit 0; ;;
    *) echo "OK" ;;
  esac;
}

help() {
  echo "Usage: $0 [-D DISPLAY] [--prompt script] [--confirm script] [-hv]";
}

parse_cliargs() {
  [[ $# -le 0 ]] && return 0;

  case "$1" in
    -D|--display) export DISPLAY="$2"; shift 1 ;;
    --prompt) prompt_action="$2"; shift 1 ;;
    --confirm) confirm_action="$2"; shift 1 ;;
    -v) echo "anypinentry-$VERSION" && exit 0 ;;
    -h) help && exit 0 ;;
    *) help && exit 1 ;;
  esac;

  shift 1;
  parse_cliargs "$@";
}

parse_cliargs "$@";

exit 0;

interpret_command "INIT";

while read line; do
  interpret_command "$line";
done;

      #{ "SETREPEAT",  cmd_setrepeat },
      #{ "SETREPEATERROR", cmd_setrepeaterror },
      #{ "SETERROR",   cmd_seterror },
      #{ "SETOK",      cmd_setok },
      #{ "SETNOTOK",   cmd_setnotok },
      #{ "SETCANCEL",  cmd_setcancel },
      #{ "CONFIRM",    cmd_confirm },
      #{ "MESSAGE",    cmd_message },
      #{ "SETQUALITYBAR", cmd_setqualitybar },
      #{ "SETQUALITYBAR_TT", cmd_setqualitybar_tt },
      #{ "SETTIMEOUT", cmd_settimeout },
      #{ "CLEARPASSPHRASE", cmd_clear_passphrase },

